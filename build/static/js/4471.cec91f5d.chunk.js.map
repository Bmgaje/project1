{"version":3,"file":"static/js/4471.cec91f5d.chunk.js","mappings":"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","sources":["helpers/errorHandler.js","views/dashboard/index.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nconst errorHandler = (error, url = '/signin') => {\n  if (!error) return null;\n\n  const errorMessage = error?.response?.data?.message || error?.message || 'Something went wrong!';\n\n  // Handle Unauthorized (401) errors with redirection\n  if (error?.response?.status === 401) {\n    toast.error(errorMessage, { toastId: 'auth-error' });\n    setTimeout(() => {\n      window.location.href = url;\n    }, 3000);\n  } else {\n    toast.error(errorMessage, { toastId: 'error' });\n  }\n  // console.error('API Error:', errorMessage); // Log for debugging\n};\n\nexport default errorHandler;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Row, Table } from 'react-bootstrap';\nimport '../dashboard/css/dashboard.css';\nimport { FaUsers } from 'react-icons/fa';\nimport { IoDocuments } from 'react-icons/io5';\nimport { Doughnut, Line, Bar } from 'react-chartjs-2';\nimport { defaults } from 'chart.js/auto';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport axios from 'axios';\nimport { Urls } from '../../helpers/Urls';\nimport { Link } from 'react-router-dom';\nimport CountUp from 'react-countup';\nimport ScrollTrigger from 'react-scroll-trigger';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport 'animate.css';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\nimport moment from 'moment';\nimport 'react-date-range/dist/styles.css';\nimport 'react-date-range/dist/theme/default.css';\nimport { DateRangePicker } from 'react-date-range';\nimport PropTypes from 'prop-types';\nimport { enGB } from 'date-fns/locale';\nimport errorHandler from '../../helpers/errorHandler';\nimport instance from '../../helpers/axiosInstance';\n\n// Register required components for Chart.js\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Title, Tooltip, Legend);\n\ndefaults.maintainAspectRatio = false;\ndefaults.responsive = true;\ndefaults.plugins.title.display = true;\ndefaults.plugins.title.align = 'start';\ndefaults.plugins.title.font.size = 20;\ndefaults.plugins.title.color = 'black';\n\nconst DashDefault = () => {\n  const [projectData, setProjectData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [countScroll, setCountScroll] = useState(false);\n  const [projectStatus, setProjectStatus] = useState();\n  const [userStatus, setUserStatus] = useState();\n  const [totals, setTotals] = useState();\n\n  useEffect(() => {\n    getProjectStatus('2024-01-01', '2025-12-12');\n    getUserStatus('2024-01-01', '2025-12-12');\n    getTotals();\n    getProject();\n  }, []);\n\n  function getTotals() {\n    instance\n      .get(`api/dashboard/totals`)\n      .then((res) => setTotals(res?.data))\n      .catch(errorHandler);\n  }\n\n  function getUserStatus(start, end) {\n    instance\n      .get(`api/dashboard/user-status?startDate=${start}&endDate=${end}`)\n      .then((res) => setUserStatus(res?.data))\n      .catch(errorHandler);\n  }\n\n  function getProjectStatus(start, end) {\n    instance\n      .get(`api/dashboard/project-status?startDate=${start}&endDate=${end}`)\n      .then((res) => setProjectStatus(res?.data))\n      .catch(errorHandler);\n  }\n\n  function getProject() {\n    setLoading(true);\n    axios\n      .get(`${Urls.get.getAllProject}?limit=5`)\n      .then((res) => setProjectData(res?.data?.data?.docs))\n      .finally(() => setLoading(false));\n  }\n\n  const data = {\n    labels: Object?.keys(projectStatus?.project || {}),\n    datasets: [\n      {\n        label: 'Dataset 1',\n        data: Object?.values(projectStatus?.project || {}),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        fill: false,\n        tension: 0.4 // Makes the line slightly curved\n      }\n    ]\n  };\n\n  // Define chart options\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        display: true,\n        position: 'top'\n      }\n    },\n    scales: {\n      y: {\n        beginAtZero: true // Start the y-axis at 0\n      }\n    }\n  };\n\n  const label = ['January', 'February', 'March', 'April', 'May', 'June', 'July'];\n\n  return (\n    <React.Fragment>\n      <div>\n        <ScrollTrigger onEnter={() => setCountScroll(true)} onExit={() => setCountScroll(false)}>\n          <div className=\"pt-3 cardMain\" id=\"cardMain\">\n            <div className=\"animate__animated animate__fadeInDown\">\n              <div className=\"cardColor\">\n                <div className=\" d-flex justify-content-between align-items-center\">\n                  <div className=\"d-flex align-items-center\">\n                    <h3 className=\"mb-0\" style={{ color: '#10446c' }}>\n                      <FaUsers className=\"cardDesign\" />\n                    </h3>\n                    <h4 className=\"mx-2 mb-0\" style={{ color: '#10446c' }}>\n                      Total Users\n                    </h4>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"pt-2\" style={{ color: '#10446c', fontWeight: 900 }}>\n                    {countScroll && <CountUp start={0} end={totals?.totalUsers || 10} />}\n                  </h3>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"animate__animated animate__fadeInDown\">\n              <div className=\"cardColor\">\n                <div className=\" d-flex justify-content-between align-items-center\">\n                  <div className=\"d-flex align-items-center\">\n                    <h3 className=\"mb-0\" style={{ color: '#10446c' }}>\n                      <FaUsers className=\"cardDesign\" />\n                    </h3>\n                    <h4 className=\"mx-2 mb-0\" style={{ color: '#10446c' }}>\n                      Total Projects\n                    </h4>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"pt-2\" style={{ color: '#10446c', fontWeight: 900 }}>\n                    {countScroll && <CountUp start={0} end={totals?.totalProjects || 10} />}\n                  </h3>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"animate__animated animate__fadeInUp\">\n              <div className=\"cardColor\">\n                <div className=\" d-flex justify-content-between align-items-center\">\n                  <div className=\"d-flex align-items-center\">\n                    <h3 className=\"mb-0\" style={{ color: '#10446c' }}>\n                      <IoDocuments className=\"cardDesign\" />\n                    </h3>\n                    <h4 className=\"mx-2 mb-0\" style={{ color: '#10446c' }}>\n                      Total Posts\n                    </h4>\n                  </div>\n                </div>\n                <div>\n                  <h3 className=\"pt-2\" style={{ color: '#10446c', fontWeight: 900 }}>\n                    {countScroll && <CountUp start={0} end={totals?.totalPosts || 50} />}\n                  </h3>\n                </div>\n              </div>\n            </div>\n          </div>\n        </ScrollTrigger>\n\n        {/* latest project top bids */}\n        <Row className=\"mainTable animate__animated animate__fadeInRight\">\n          <Col>\n            <Card style={{ borderRadius: 15, border: '1px solid #10446c' }} className=\"mt-3\">\n              <Card.Header\n                style={{\n                  position: 'relative',\n                  borderBottom: '1px dashed #10446c'\n                }}\n              >\n                <div className=\"col-6 pt-1\">\n                  <Card.Title as=\"h4\">\n                    <IoDocuments\n                      style={{\n                        color: '#10446c',\n                        marginRight: '8px',\n                        fontSize: '40px',\n                        padding: '5px',\n                        backgroundColor: '#f1faee',\n                        borderRadius: '50%',\n                        border: '2px dashed #10446c'\n                      }}\n                    />\n                    <b style={{ color: '#10446c' }}>Latest Project</b>\n                  </Card.Title>\n                </div>\n              </Card.Header>\n              <Card.Body>\n                {loading ? (\n                  <div className=\"text-center\">\n                    <ScaleLoader color=\"#10446c\" />\n                    <h6 className=\"text-danger mt-3\">Loading.....</h6>\n                  </div>\n                ) : projectData?.length === 0 ? (\n                  <div className=\"text-center pt-3 pb-3\">\n                    <h6 className=\"text-danger\">No data available ! 😥</h6>\n                  </div>\n                ) : (\n                  <Table responsive hover bordered>\n                    <thead className=\"tableHeader\">\n                      <tr className=\"text-center\">\n                        <th>Sr No.</th>\n                        <th>Project Title</th>\n                        <th>Users</th>\n                        <th>Information</th>\n                      </tr>\n                    </thead>\n                    {projectData?.map((item, index) => {\n                      return (\n                        <tbody key={index} className=\"tableBody\">\n                          <tr className=\"text-center\">\n                            <td className=\"text-center\">{index + 1}</td>\n                            <td>{item?.project_title}</td>\n                            <td>{item?.user?.name}</td>\n                            <td className=\"text-center\">\n                              <Link to={'/projectDetails/' + item?._id} state={{ url: '/' }}>\n                                <Button style={{ backgroundColor: '#327cb3', border: 'none' }} size=\"sm\">\n                                  <FontAwesomeIcon icon={faEye} />\n                                </Button>\n                              </Link>\n                            </td>\n                          </tr>\n                        </tbody>\n                      );\n                    })}\n                  </Table>\n                )}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* latest graph  */}\n        <div id=\"mainChart\" className=\"mainChart\">\n          <div>\n            <Card style={{ borderRadius: 15, border: '1px solid #10446c' }}>\n              <Card.Header\n                style={{\n                  position: 'relative',\n                  borderBottom: '1px dashed #10446c'\n                }}\n              >\n                <Row>\n                  <div className=\"pt-1 d-flex justify-content-between\">\n                    <Card.Title as=\"h4\">\n                      <b style={{ color: '#10446c', textWrap: 'nowrap' }}>Users Report</b>\n                    </Card.Title>\n                    <CustomDatePicker style={{ left: -200 }} fetchData={getUserStatus} />\n                  </div>\n                </Row>\n              </Card.Header>\n              <div className=\"pb-4 chartHeight\">\n                <p className=\"mb-0 mt-2 d-flex justify-content-center\">\n                  Start date: {userStatus?.startDate} to End date: {userStatus?.endDate}\n                </p>\n                <Doughnut\n                  const\n                  data={{\n                    labels: ['Active Users', 'In-Active Users'],\n                    datasets: [\n                      {\n                        label: 'Users',\n                        data: [userStatus?.user?.active, userStatus?.user?.draft],\n                        backgroundColor: ['rgb(0, 128, 0)', 'rgb(255, 0, 0)'],\n                        hoverOffset: 4\n                      }\n                    ]\n                  }}\n                />\n              </div>\n            </Card>\n          </div>\n          <div>\n            <Card style={{ borderRadius: 15, border: '1px solid #10446c' }}>\n              <Card.Header\n                style={{\n                  position: 'relative',\n                  borderBottom: '1px dashed #10446c'\n                }}\n              >\n                <Row>\n                  <div className=\"pt-1 d-flex justify-content-between\">\n                    <Card.Title as=\"h4\">\n                      <b style={{ color: '#10446c', textWrap: 'nowrap' }}> Line Chart</b>\n                    </Card.Title>\n                    <CustomDatePicker style={{ right: -10 }} fetchData={getProjectStatus} />\n                  </div>\n                </Row>\n              </Card.Header>\n              <div className=\"pb-4 chartHeight\">\n                <p className=\"d-flex justify-content-center mb-0 mt-2\">\n                  Start date: {projectStatus?.startDate} to End date: {projectStatus?.endDate}\n                </p>\n                <Line data={data} options={options} />\n              </div>\n            </Card>\n          </div>\n        </div>\n\n        <div style={{ width: '50%', minWidth: '300px' }}>\n          <Card style={{ borderRadius: 15, border: '1px solid #10446c' }}>\n            <Card.Header\n              style={{\n                position: 'relative',\n                borderBottom: '1px dashed #10446c'\n              }}\n            >\n              <Row>\n                <div className=\"col-5 pt-1\">\n                  <Card.Title as=\"h4\">\n                    <b style={{ color: '#10446c' }}>Bar Chart</b>\n                  </Card.Title>\n                </div>\n              </Row>\n            </Card.Header>\n            <div className=\"pb-4\" style={{ height: '400px' }}>\n              <Bar\n                data={{\n                  labels: label, // Use the defined 'label' variable\n                  datasets: [\n                    {\n                      label: 'My First Dataset',\n                      data: [65, 59, 80, 81, 56, 55, 40], // Dummy data\n                      backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(255, 159, 64, 0.2)',\n                        'rgba(255, 205, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(201, 203, 207, 0.2)'\n                      ],\n                      borderColor: [\n                        'rgb(255, 99, 132)',\n                        'rgb(255, 159, 64)',\n                        'rgb(255, 205, 86)',\n                        'rgb(75, 192, 192)',\n                        'rgb(54, 162, 235)',\n                        'rgb(153, 102, 255)',\n                        'rgb(201, 203, 207)'\n                      ],\n                      borderWidth: 1\n                    }\n                  ]\n                }}\n                options={{\n                  responsive: true,\n                  plugins: {\n                    legend: {\n                      display: true,\n                      position: 'top'\n                    }\n                  },\n                  scales: {\n                    x: {\n                      title: {\n                        display: true,\n                        text: 'User Status'\n                      }\n                    },\n                    y: {\n                      beginAtZero: true,\n                      title: {\n                        display: true,\n                        text: 'Number of Users'\n                      }\n                    }\n                  }\n                }}\n              />\n            </div>\n          </Card>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DashDefault;\n\nfunction CustomDatePicker({ fetchData, style }) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectionRange, setSelectionRange] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n    key: 'selection'\n  });\n\n  const handleSelect = (ranges) => {\n    const { startDate, endDate } = ranges.selection; // Extract startDate and endDate\n    setSelectionRange({ ...selectionRange, startDate, endDate });\n  };\n\n  return (\n    <div style={{ position: 'relative' }}>\n      {/* Date select button */}\n      <button type=\"button\" className=\"btn btn-sm btn-secondary\" style={{ fontWeight: 700 }} onClick={() => setIsOpen(!isOpen)}>\n        Select Date\n      </button>\n      {isOpen && (\n        <div\n          id=\"date-range-pickers\"\n          style={{\n            position: 'absolute',\n            zIndex: 100,\n            backgroundColor: '#fff',\n            boxShadow: '0px 4px 8px rgba(0, 0, 0, 0.2)',\n            borderRadius: '8px',\n            overflowX: 'auto',\n            ...style\n          }}\n        >\n          {/* Transparent close button */}\n          <button className=\"closeBtn\" onClick={() => setIsOpen(false)}></button>\n\n          {/* Date picker component */}\n          <DateRangePicker\n            minDate={moment().subtract(1, 'year').toDate()}\n            maxDate={new Date()}\n            ranges={[selectionRange]}\n            onChange={handleSelect}\n            locale={enGB}\n          />\n\n          {/* date filter button */}\n          <div className=\"d-flex justify-content-end\">\n            <button\n              style={{ fontWeight: 700 }}\n              type=\"button\"\n              className=\"btn btn-sm btn-primary font-weight-bold\"\n              onClick={() => {\n                fetchData(moment(selectionRange.startDate).format('YYYY-MM-DD'), moment(selectionRange.endDate).format('YYYY-MM-DD'));\n                setIsOpen(false);\n              }}\n            >\n              Filter Date\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\nCustomDatePicker.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n  style: PropTypes.object.isRequired\n};\n"],"names":["error","_error$response","_error$response$data","_error$response2","url","arguments","length","undefined","errorMessage","response","data","message","status","toast","toastId","setTimeout","window","location","href","ChartJS","register","LineElement","CategoryScale","LinearScale","PointElement","Title","Tooltip","Legend","defaults","maintainAspectRatio","responsive","plugins","title","display","align","font","size","color","DashDefault","_userStatus$user","_userStatus$user2","projectData","setProjectData","useState","loading","setLoading","countScroll","setCountScroll","projectStatus","setProjectStatus","userStatus","setUserStatus","totals","setTotals","getUserStatus","start","end","instance","get","then","res","catch","errorHandler","getProjectStatus","useEffect","axios","Urls","getAllProject","_res$data","_res$data$data","docs","finally","labels","Object","keys","project","datasets","label","values","borderColor","backgroundColor","fill","tension","_jsx","React","children","_jsxs","ScrollTrigger","onEnter","onExit","className","id","style","FaUsers","fontWeight","CountUp","totalUsers","totalProjects","IoDocuments","totalPosts","Row","Col","Card","borderRadius","border","Header","position","borderBottom","as","marginRight","fontSize","padding","Body","ScaleLoader","Table","hover","bordered","map","item","index","_item$user","project_title","user","name","Link","to","_id","state","Button","FontAwesomeIcon","icon","faEye","textWrap","CustomDatePicker","left","fetchData","startDate","endDate","Doughnut","const","active","draft","hoverOffset","right","Line","options","legend","scales","y","beginAtZero","width","minWidth","height","Bar","borderWidth","x","text","_ref","isOpen","setIsOpen","selectionRange","setSelectionRange","Date","key","type","onClick","zIndex","boxShadow","overflowX","DateRangePicker","minDate","moment","subtract","toDate","maxDate","ranges","onChange","selection","locale","enGB","format"],"sourceRoot":""}