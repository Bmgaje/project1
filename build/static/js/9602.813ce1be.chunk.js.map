{"version":3,"file":"static/js/9602.813ce1be.chunk.js","mappings":"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","sources":["components/project/ProjectList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, Table, Form, Button } from 'react-bootstrap';\nimport axios from 'axios';\nimport { Urls } from '../../helpers/Urls';\nimport Select from 'react-select';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport { AiFillProject } from 'react-icons/ai';\nimport 'animate.css';\nimport '../project/css/project.css';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nexport default function ProjectList() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [projectData, setProjectData] = useState([]);\n  const [totalPages, setTotalPages] = useState(null);\n  const [activePage, setActivePage] = useState(location?.state?.activePage || 1);\n  const [limit, setLimit] = useState(location?.state?.limit || 10);\n\n  let [searchUser, setSearchUser] = useState('');\n  let limitUser = 50;\n  let [loading, setLoading] = useState(false);\n\n  let [userData, setUserData] = useState([]);\n  let [userId, setUserId] = useState('');\n  let [selectedUser, setSelectedUser] = useState(null); // Store selected user object\n\n  let [totaldocs, setTotaldocs] = useState('');\n  let [currentChunk, setCurrentChunk] = useState(0);\n\n  function getProject() {\n    setLoading(true);\n    axios\n      .get(Urls.get.getAllProject + `?page=${activePage}&limit=${limit}&is_delete=no&user=${userId}`)\n      .then((res) => {\n        console.log('project list', res);\n        const projects = res?.data?.data?.docs || [];\n        setProjectData(projects);\n        setTotalPages(res?.data?.data?.totalPages);\n        setActivePage(res?.data?.data?.page);\n        setTotaldocs(res?.data?.data?.totalDocs);\n      })\n      .finally(() => setLoading(false));\n  }\n\n  function getUsers() {\n    axios.get(Urls.get.getAllUsers + `?is_delete=no&q=${searchUser || userId}&limit=${limitUser}`).then((res) => {\n      console.log('user list', res);\n      const users = res?.data?.data || [];\n      // Add \"Show All\" option to userData\n      setUserData([{ label: 'Show All', value: '' }, ...users.map((user) => ({ label: user.name, value: user._id }))]);\n    });\n  }\n\n  useEffect(() => {\n    getProject();\n  }, [activePage, limit, userId]);\n\n  useEffect(() => {\n    getUsers();\n  }, [searchUser, userId]);\n\n  const handleLimit = (e) => {\n    setLimit(e.target.value);\n    setActivePage(1);\n  };\n\n  const handleUserChange = (selectedOption) => {\n    setUserId(selectedOption?.value || ''); // Update userId based on selected value\n    setSelectedUser(selectedOption); // Store the selected user for display\n    setSearchUser(''); // Clear search when a user is selected\n    setActivePage(1); // Reset to first page when changing user filter\n  };\n\n  const handleSearchInput = (inputS) => {\n    if (!userId) {\n      setSearchUser(inputS); // Allow search only when no user is selected\n      setActivePage(1);\n    }\n  };\n\n  // Pagination button\n  const pagesPerChunk = 5;\n  const totalChunks = Math.ceil(totalPages / pagesPerChunk);\n\n  const handleNext = () => {\n    if (currentChunk < totalChunks - 1) {\n      setCurrentChunk(currentChunk + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentChunk > 0) {\n      setCurrentChunk(currentChunk - 1);\n    }\n  };\n\n  const handlePageClick = (pageNumber) => {\n    setActivePage(pageNumber);\n    navigate(location.pathname, { replace: true, state: pageNumber });\n  };\n\n  const chunkStartPage = currentChunk * pagesPerChunk + 1;\n  const chunkEndPage = Math.min(chunkStartPage + pagesPerChunk - 1, totalPages);\n  const pages = [];\n  for (let i = chunkStartPage; i <= chunkEndPage; i++) {\n    pages.push(i);\n  }\n\n  // Showing of 1 to 10 of 100 entries.\n  const indexOfLastEntry = activePage * limit;\n  const indexOfFirstEntry = indexOfLastEntry - limit;\n\n  const startEntry = indexOfFirstEntry + 1;\n  const endEntry = Math.min(indexOfLastEntry, totaldocs);\n\n  return (\n    <div>\n      <div className=\"row pb-3\">\n        <div className=\"col-2 offset-10\">\n          <div className=\"d-flex justify-content-evenly align-items-center\">\n            <div className=\"text-dark\">Limit :</div>\n            <div>\n              <select className=\"btn btn-light p-1\" style={{ border: '1px solid #10446c' }} onChange={handleLimit} value={limit}>\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n                <option value=\"500\">500</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Row className=\"mainProject animate__animated animate__fadeInRight\">\n        <Col>\n          <Card style={{ borderRadius: 15, border: '1px solid #10446c' }}>\n            <Card.Header\n              style={{\n                borderBottom: '1px dashed #10446c'\n              }}\n            >\n              <Row>\n                <div className=\"col-8 pt-1\">\n                  <Card.Title as=\"h4\">\n                    <AiFillProject\n                      style={{\n                        color: '#10446c',\n                        marginRight: '8px',\n                        fontSize: '40px',\n                        padding: '5px',\n                        backgroundColor: '#f1faee',\n                        borderRadius: '50%',\n                        border: '2px dashed #10446c'\n                      }}\n                    />\n                    <b style={{ color: '#10446c' }}>Project List </b>\n                  </Card.Title>\n                </div>\n                <div className=\"col-3 \">\n                  <Form.Label style={{ fontWeight: 'bold', color: '#10446c' }}>Search by user</Form.Label>\n                  <Form.Group className=\"mb-3\" as={Col} controlId=\"exampleForm.ControlSelect1\">\n                    <div>\n                      <Select\n                        value={selectedUser} // Show selected user in input box\n                        onChange={handleUserChange} // Handle selection of user\n                        options={userData} // User data for options\n                        onInputChange={handleSearchInput} // Handle user search input\n                        placeholder=\"Search...\"\n                        isSearchable\n                      />\n                    </div>\n                  </Form.Group>\n                </div>\n              </Row>\n            </Card.Header>\n\n            <Card.Body>\n              {loading ? (\n                <div className=\"text-center\">\n                  <ScaleLoader color=\"#10446c\" />\n                  <h6 className=\"text-danger mt-3\">Loading.....</h6>\n                </div>\n              ) : projectData?.length === 0 ? (\n                <div className=\"text-center pt-3 pb-3\">\n                  <h6 className=\"text-danger\">No data available ! 😥</h6>\n                </div>\n              ) : (\n                <>\n                  <Table responsive hover bordered>\n                    <thead className=\"tableHeader\">\n                      <tr className=\"text-center\">\n                        <th>Sr No.</th>\n                        <th>Project Title</th>\n                        <th>Users</th>\n                        <th>Information</th>\n                      </tr>\n                    </thead>\n                    {projectData?.map((item, index) => {\n                      return (\n                        <tbody key={index} className=\"tableBody\">\n                          <tr>\n                            <td className=\"text-center\">{index + 1}</td>\n                            <td>{item?.project_title}</td>\n                            <td>{item?.user?.name}</td>\n                            <td className=\"text-center\">\n                              <Link to={'/projectDetails/' + item?._id} state={{ url2: '/project', activePage, limit }}>\n                                <Button style={{ backgroundColor: '#327cb3', border: 'none' }} size=\"sm\">\n                                  <FontAwesomeIcon icon={faEye} />\n                                </Button>\n                              </Link>\n                            </td>\n                          </tr>\n                        </tbody>\n                      );\n                    })}\n                  </Table>\n                </>\n              )}\n\n              {/* Pagination */}\n\n              <div className=\"container \">\n                <div className=\"row d-flex justify-content-center\">\n                  <div className=\"col-6 pt-3 \">\n                    <div\n                      style={{\n                        borderLeft: '5px solid #10446c',\n                        paddingLeft: '5px'\n                      }}\n                    >\n                      <h5 style={{ color: '#10446c', fontSize: '16px' }}>\n                        Showing {startEntry} to {endEntry} of {totaldocs} entries.\n                      </h5>\n                    </div>\n                  </div>\n\n                  <div className=\"col-6 pt-3 text-center \">\n                    <Button\n                      onClick={handlePrev}\n                      type=\"button\"\n                      className=\"btn btn-sm\"\n                      style={{ backgroundColor: '#10446c', border: 'none' }}\n                      disabled={currentChunk === 0}\n                    >\n                      {'<'}\n                    </Button>\n\n                    {pages.map((value) => {\n                      return (\n                        <button\n                          key={value}\n                          type=\"button\"\n                          className={activePage === value ? 'btn btn-sm btn-primary rounded-circle' : 'btn btn-sm btn-dark'}\n                          onClick={() => handlePageClick(value)}\n                        >\n                          {value}\n                        </button>\n                      );\n                    })}\n\n                    <Button\n                      onClick={handleNext}\n                      type=\"button\"\n                      className=\"btn btn-sm \"\n                      style={{ backgroundColor: '#10446c', border: 'none' }}\n                      disabled={currentChunk === totalChunks - 1}\n                    >\n                      {'>'}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              {/* <Card title=\"Pagination\" className=\"mt-4 d-flex justify-content-center align-items-center\">\n                <Pagination className=\"mt-3\">\n                  {Array(totalPages)\n                    .fill('')\n                    .map((item, index) => (\n                      <Pagination.Item key={index} onClick={() => setActivePage(index + 1)}>\n                        {index + 1}\n                      </Pagination.Item>\n                    ))}\n                </Pagination>\n              </Card> */}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n"],"names":["ProjectList","_location$state","_location$state2","navigate","useNavigate","location","useLocation","projectData","setProjectData","useState","totalPages","setTotalPages","activePage","setActivePage","state","limit","setLimit","searchUser","setSearchUser","loading","setLoading","userData","setUserData","userId","setUserId","selectedUser","setSelectedUser","totaldocs","setTotaldocs","currentChunk","setCurrentChunk","useEffect","axios","get","Urls","getAllProject","then","res","_res$data","_res$data$data","_res$data2","_res$data2$data","_res$data3","_res$data3$data","_res$data4","_res$data4$data","console","log","projects","data","docs","page","totalDocs","finally","getAllUsers","_res$data5","users","label","value","map","user","name","_id","totalChunks","Math","ceil","chunkStartPage","chunkEndPage","min","pages","i","push","indexOfLastEntry","startEntry","endEntry","_jsxs","children","_jsx","className","style","border","onChange","e","target","Row","Col","Card","borderRadius","Header","borderBottom","Title","as","AiFillProject","color","marginRight","fontSize","padding","backgroundColor","Form","Label","fontWeight","Group","controlId","Select","selectedOption","options","onInputChange","inputS","placeholder","isSearchable","Body","ScaleLoader","length","_Fragment","Table","responsive","hover","bordered","item","index","_item$user","project_title","Link","to","url2","Button","size","FontAwesomeIcon","icon","faEye","borderLeft","paddingLeft","onClick","handlePrev","type","disabled","handlePageClick","pageNumber","pathname","replace","handleNext"],"sourceRoot":""}