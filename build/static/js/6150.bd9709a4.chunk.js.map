{"version":3,"file":"static/js/6150.bd9709a4.chunk.js","mappings":"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","sources":["components/transaction/BankDetails.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, Col, Card, InputGroup, Form, Table, Button } from 'react-bootstrap';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport 'animate.css';\nimport { RiBankFill } from 'react-icons/ri';\nimport '../transaction/css/transaction.css';\nimport axios from 'axios';\nimport { Urls } from '../../helpers/Urls';\nimport ScaleLoader from 'react-spinners/ScaleLoader';\n\nfunction BankDetails() {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  let [details, setDetails] = useState([]);\n  let [search, setSearch] = useState('');\n\n  const [totalPages, setTotalPages] = useState(null);\n  const [activePage, setActivePage] = useState(location?.state?.activePage || 1);\n  const [limit, setLimit] = useState(location?.state?.limit || 10);\n  let [loading, setLoading] = useState(false);\n\n  let [totaldocs, setTotaldocs] = useState('');\n  let [currentChunk, setCurrentChunk] = useState(0);\n\n  function bankdetails() {\n    setLoading(true);\n    axios\n      .get(Urls.get.userBankDetails + `?page=${activePage}&limit=${limit}&isPrimary=true&q=${search}`)\n      .then((res) => {\n        console.log('Bank details:)', res);\n        setDetails(res?.data?.data);\n        setTotalPages(res.data?.totalPages);\n        setActivePage(res.data?.currentPage);\n        setTotaldocs(res?.data?.totalDocs);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    bankdetails();\n  }, [activePage, limit, search]);\n\n  const handleSearch = (e) => {\n    setSearch(e.target.value);\n    setActivePage(1);\n  };\n\n  const handleLimit = (e) => {\n    setLimit(e.target.value);\n    setActivePage(1);\n  };\n\n  // Pagination button\n  const pagesPerChunk = 5;\n  const totalChunks = Math.ceil(totalPages / pagesPerChunk);\n\n  const handleNext = () => {\n    if (currentChunk < totalChunks - 1) {\n      setCurrentChunk(currentChunk + 1);\n    }\n  };\n  const handlePrev = () => {\n    if (currentChunk > 0) {\n      setCurrentChunk(currentChunk - 1);\n    }\n  };\n\n  const handlePageClick = (pageNumber) => {\n    setActivePage(pageNumber);\n    navigate(location.pathname, { replace: true, state: pageNumber });\n  };\n\n  const chunkStartPage = currentChunk * pagesPerChunk + 1;\n  const chunkEndPage = Math.min(chunkStartPage + pagesPerChunk - 1, totalPages);\n  const pages = [];\n  for (let i = chunkStartPage; i <= chunkEndPage; i++) {\n    pages.push(i);\n  }\n\n  // Showing of 1 to 10 of 100 entries.\n  const indexOfLastEntry = activePage * limit;\n  const indexOfFirstEntry = indexOfLastEntry - limit;\n\n  const startEntry = indexOfFirstEntry + 1;\n  const endEntry = Math.min(indexOfLastEntry, totaldocs);\n\n  return (\n    <div>\n      <div className=\"row pb-3\">\n        <div className=\"col-2 offset-10\">\n          <div className=\"d-flex justify-content-evenly align-items-center\">\n            <div className=\"text-dark\">Limit :</div>\n            <div>\n              <select className=\"btn btn-light p-1\" style={{ border: '1px solid #10446c' }} onChange={handleLimit} value={limit}>\n                <option value=\"10\">10</option>\n                <option value=\"20\">20</option>\n                <option value=\"50\">50</option>\n                <option value=\"100\">100</option>\n                <option value=\"500\">500</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Row className=\"mainBankDetails animate__animated animate__fadeInRight\">\n        <Col>\n          <Card style={{ borderRadius: 15, border: '1px solid #10446c' }}>\n            <Card.Header\n              style={{\n                borderBottom: '1px dashed #10446c'\n              }}\n            >\n              <Row>\n                <div className=\"col-8\">\n                  <Card.Title as=\"h4\">\n                    <RiBankFill\n                      style={{\n                        color: '#10446c',\n                        marginRight: '8px',\n                        fontSize: '40px',\n                        padding: '5px',\n                        backgroundColor: '#f1faee',\n                        borderRadius: '50%',\n                        border: '2px dashed #10446c'\n                      }}\n                    />\n                    <b style={{ color: '#10446c' }}>Bank Details Table</b>\n                  </Card.Title>\n                </div>\n                <div className=\"col-3 \">\n                  <Form.Group as={Col} controlId=\"exampleForm.ControlSelect1\">\n                    <InputGroup>\n                      <Form.Control\n                        className=\"bg-white py-2 \"\n                        size=\"sm\"\n                        onChange={handleSearch}\n                        style={{ border: '1px solid #10446c' }}\n                        type=\"text\"\n                        placeholder=\" Search\"\n                      />\n                    </InputGroup>\n                  </Form.Group>\n                </div>\n              </Row>\n            </Card.Header>\n            <Card.Body>\n              {loading ? (\n                <div className=\"text-center\">\n                  <ScaleLoader color=\"#10446c\" />\n                  <h6 className=\"text-danger mt-3\">Loading.....</h6>\n                </div>\n              ) : details?.length === 0 ? (\n                <div className=\"text-center pt-3 pb-3\">\n                  <h6 className=\"text-danger\">No data available ! 😥</h6>\n                </div>\n              ) : (\n                <Table responsive hover bordered>\n                  <thead className=\"tableHeader\">\n                    <tr className=\"text-center\">\n                      <th>Sr No.</th>\n                      <th>Customer Name</th>\n                      <th>Bank Name (Primary A/c)</th>\n                      <th>Information</th>\n                    </tr>\n                  </thead>\n                  {details?.map((item, index) => {\n                    return (\n                      <tbody key={index} className=\"tableBody\">\n                        <tr>\n                          <td className=\"text-center\">{index + 1}</td>\n                          <td>{item?.accountHolderName}</td>\n                          <td>{item?.bankName}</td>\n                          <td className=\"text-center\">\n                            <Link to={'/bankdetailsview/' + item?._id} state={{ activePage, limit }}>\n                              <Button style={{ backgroundColor: '#327cb3', border: 'none' }} size=\"sm\">\n                                <FontAwesomeIcon icon={faEye} />\n                              </Button>\n                            </Link>\n                          </td>\n                        </tr>\n                      </tbody>\n                    );\n                  })}\n                </Table>\n              )}\n\n              {/* Pagination */}\n\n              <div className=\"container \">\n                <div className=\"row d-flex justify-content-center\">\n                  <div className=\"col-6 pt-3 \">\n                    <div\n                      style={{\n                        borderLeft: '5px solid #10446c',\n                        paddingLeft: '5px'\n                      }}\n                    >\n                      <h5 style={{ color: '#10446c', fontSize: '16px' }}>\n                        Showing {startEntry} to {endEntry} of {totaldocs} entries.\n                      </h5>\n                    </div>\n                  </div>\n\n                  <div className=\"col-6 pt-3 text-center \">\n                    <Button\n                      onClick={handlePrev}\n                      type=\"button\"\n                      className=\"btn btn-sm\"\n                      style={{ backgroundColor: '#10446c', border: 'none' }}\n                      disabled={currentChunk === 0}\n                    >\n                      {'<'}\n                    </Button>\n\n                    {pages.map((value) => {\n                      return (\n                        <button\n                          key={value}\n                          type=\"button\"\n                          className={activePage === value ? 'btn btn-sm btn-primary rounded-circle' : 'btn btn-sm btn-dark'}\n                          onClick={() => handlePageClick(value)}\n                        >\n                          {value}\n                        </button>\n                      );\n                    })}\n\n                    <Button\n                      onClick={handleNext}\n                      type=\"button\"\n                      className=\"btn btn-sm \"\n                      style={{ backgroundColor: '#10446c', border: 'none' }}\n                      disabled={currentChunk === totalChunks - 1}\n                    >\n                      {'>'}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n\n              {/* <Card title=\"Pagination\" className=\"d-flex justify-content-center align-items-center pt-3\">\n                <Pagination>\n                  {Array(totalPages)\n                    .fill('')\n                    .map((item, index) => (\n                      <Pagination.Item key={index} onClick={() => setActivePage(index + 1)}>\n                        {index + 1}\n                      </Pagination.Item>\n                    ))}\n                </Pagination>\n              </Card> */}\n            </Card.Body>\n          </Card>\n        </Col>\n\n        {/* <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title className=\"text-danger\">Alert</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure want to delete the skill ?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"dark\" size=\"sm\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" size=\"sm\" onClick={deleteBTN}>\n            Delete\n          </Button>\n        </Modal.Footer>\n      </Modal> */}\n      </Row>\n    </div>\n  );\n}\n\nexport default BankDetails;\n"],"names":["_location$state","_location$state2","navigate","useNavigate","location","useLocation","details","setDetails","useState","search","setSearch","totalPages","setTotalPages","activePage","setActivePage","state","limit","setLimit","loading","setLoading","totaldocs","setTotaldocs","currentChunk","setCurrentChunk","useEffect","axios","get","Urls","userBankDetails","then","res","_res$data","_res$data2","_res$data3","_res$data4","console","log","data","currentPage","totalDocs","finally","totalChunks","Math","ceil","chunkStartPage","chunkEndPage","min","pages","i","push","indexOfLastEntry","startEntry","endEntry","_jsxs","children","_jsx","className","style","border","onChange","e","target","value","Row","Col","Card","borderRadius","Header","borderBottom","Title","as","RiBankFill","color","marginRight","fontSize","padding","backgroundColor","Form","Group","controlId","InputGroup","Control","size","type","placeholder","Body","ScaleLoader","length","Table","responsive","hover","bordered","map","item","index","accountHolderName","bankName","Link","to","_id","Button","FontAwesomeIcon","icon","faEye","borderLeft","paddingLeft","onClick","handlePrev","disabled","handlePageClick","pageNumber","pathname","replace","handleNext"],"sourceRoot":""}